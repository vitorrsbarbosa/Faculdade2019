CREATE OR REPLACE FUNCTION NOMECLI (pCodigo IN NUMBER) RETURN VARCHAR2
IS
   vNome  CLIENTE.NOME%TYPE;
BEGIN
   SELECT NOME INTO vNome
     FROM CLIENTE
   WHERE CODCLIENTE = pCodigo;
   RETURN vNome;
 EXCEPTION
    WHEN NO_DATA_FOUND THEN
      vNome := 'Cliente não cadastrado!!!';
      RETURN vNome;
END;

--


SELECT NOMECLI(100) FROM DUAL;

SELECT CODPEDIDO, CODCLIENTE, NOMECLI(CODCLIENTE) AS NOME, VALORTOTAL
FROM PEDIDO;

-- CRIAR UMA PROCEDURE QUE RECEBA O CODIGO DO CLIENTE
-- E RETORNE A QUANTIDADE DE ITENS COMPRADOS (ITEMPEDIDO.QUANTIDADE) 
-- E O VALORTOTAL (ITEMPEDIDO.VALORUNITARIO * ITEMPEDIDO.QUANTIDADE)

 -- PARAMETRO

CREATE OR REPLACE PROCEDURE PTOTAL (pCODCLIENTE IN NUMBER, pQUANTIDADE OUT NUMBER, pTOTAL OUT NUMBER) IS
BEGIN
   SELECT SUM(I.QUANTIDADE) QTDE, SUM(I.QUANTIDADE * I.VALORUNITARIO) TOTAL
      INTO pQUANTIDADE, pTOTAL
  FROM PEDIDO P INNER JOIN ITEMPEDIDO I ON P.CODPEDIDO = I.CODPEDIDO
  WHERE P.CODCLIENTE = pCODCLIENTE;  
EXCEPTION 
   WHEN NO_DATA_FOUND THEN
     pQUANTIDADE := 0;
     pTOTAL      := 0;
END;

DECLARE 
   vQTde   NUMBER;
   vTotal  NUMBER;
   vNome   VARCHAR2(80);
BEGIN
   PTOTAL(1,vQtde,vTotal);
   vNome := NOMECLI(1);
   Dbms_OutPut.Put_Line(vNome || ' Qtde: ' || vQtde || ' Total: ' || vTotal);
END;